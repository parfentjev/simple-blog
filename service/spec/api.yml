openapi: '3.0.0'
info:
  title: Simple Blog
  version: '1.0'
servers:
  - url: http://localhost:8080
  - url: https://service.fakeplastictrees.ee
tags:
  - name: Users
  - name: Posts
paths:
  /users:
    post:
      tags:
        - Users
      description: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '201':
          description: User created
        '400':
          description: Bad request body
        '403':
          description: Registration is disabled
        '500':
          description: Internal server error
  /users/token:
    post:
      tags:
        - Users
      description: Generate a user token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '200':
          description: Token created
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/UserTokenDto'
        '400':
          description: Bad request body
        '500':
          description: Internal server error
  /posts/published:
    get:
      tags:
        - Posts
      description: Get published posts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/PostPreviewDto'
        '500':
          description: Internal server error
  /posts/published/{id}:
    get:
      tags:
        - Posts
      description: Get a published post by id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Post id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/PostDto'
        '404':
          description: Post not found
        '500':
          description: Internal server error
  /rss/posts:
    get:
      tags:
        - Posts
      description: Get an RSS feed with published posts
      responses:
        '200':
          description: OK
          content:
            application/rss+xml:
              schema:
                type: string
        '500':
          description: Internal server error
  /posts/editor:
    get:
      tags:
        - Posts
      description: Get all posts, both published and drafts
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/PostPreviewDto'
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
    post:
      tags:
        - Posts
      description: Create a new post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostEditorDto'
      security:
        - bearerAuth: []
      responses:
        '201':
          description: OK
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /posts/editor/{id}:
    get:
      tags:
        - Posts
      security:
        - bearerAuth: []
      description: Get a post, whether it's published or not
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Post id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/PostDto'
        '401':
          description: Unauthorized
        '404':
          description: Post not found
        '500':
          description: Internal server error
    put:
      tags:
        - Posts
      security:
        - bearerAuth: []
      description: Update an existing post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Post id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostEditorDto'
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: Post not found
        '500':
          description: Internal server error
    delete:
      tags:
        - Posts
      security:
        - bearerAuth: []
      description: Delete an existing post
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Post id
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: Post not found
        '500':
          description: Internal server error
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    UserTokenDto:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
      required:
        - token
        - expires
    PostPreviewDto:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        summary:
          type: string
        date:
          type: string
        visible:
          type: boolean
      required:
        - id
        - title
        - summary
        - date
        - visible
    PostDto:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        summary:
          type: string
        text:
          type: string
        date:
          type: string
        visible:
          type: boolean
      required:
        - id
        - title
        - summary
        - text
        - date
        - visible
    PostEditorDto:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        summary:
          type: string
        text:
          type: string
        date:
          type: string
        visible:
          type: boolean
      required:
        - title
        - summary
        - text
        - visible
